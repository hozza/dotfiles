###############################
# Git Config & Aliases
###############################

[core]
	editor = nano
	whitespace = warn

# this seeems to be the dotfile convention
[color]
	branch = auto
	diff = auto
	interactive = auto
	pager = true
	status = auto
	ui = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# https://github.com/csswizardry/dotfiles/blob/master/.gitconfig
[alias]
	ci = commit
	co = checkout
	st = status
	d = diff
	a = add
	b = branch
	cob = checkout -b
	bd = branch -D

	# easy patching
	sp = stage -p
	cip = commit -p
	
	# Sneak changes into your previous commit
	sneak = commit -a --amend --no-edit
	# Undo the last commit, but preserve the staging area
	undo = reset --soft HEAD^
	# It’s nice to be nice
	praise = blame
	who = blame

	# See everything done recently
	recap = log --oneline --no-merges
	# Show very last commit
	last = log --oneline -1
	# See today’s work
	today = log --since=\"00:00:00\" --all --no-merges --oneline

	# See which commits are on your local branch that aren't on the remote
	local = "! git log --oneline --no-merges origin/$(git rev-parse --abbrev-ref HEAD).."
	# See which commits are on the remote that aren’t on your local branch
	upstream = "! git fetch && git log --oneline --no-merges ..origin/$(git rev-parse --abbrev-ref HEAD)"

	# compress large git objects etc.
	compress = "! git remote prune origin && git repack && git prune-packed && git gc --aggressive"

# Privates
# use separate file for username, etc.
[include]
	path = ~/.dotfiles_private/.gitconfig.local
[pull]
	rebase = false
